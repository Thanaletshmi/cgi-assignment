{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { async, inject, TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\nimport { ViewAllRecipeService } from './view-all-recipe.service';\ndescribe('ViewAllRecipeService', () => {\n  let viewAllRecipeService;\n  let httpClient;\n  let url = 'http://localhost:8080';\n  let httpMock;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      providers: [ViewAllRecipeService]\n    });\n    viewAllRecipeService = TestBed.inject(ViewAllRecipeService);\n    httpMock = TestBed.inject(HttpTestingController);\n  });\n  it('should be created', () => {\n    expect(viewAllRecipeService).toBeTruthy();\n  }); // it('should call getRecipes() and return an array of recipes', () => {\n  //   const recipes = [\n  //     {\n  //         \"title\": \"Barbecued Grilled Portobello Sandwich\",\n  //         \"href\": \"http://www.kraftfoods.com/kf/recipes/barbecued-grilled-portobello-sandwich-53215.aspx\",\n  //         \"ingredients\": [\n  //             \"mushrooms\",\n  //             \"barbecue sauce\",\n  //             \"sandwich rolls\",\n  //             \"lettuce\",\n  //             \"tomato\"\n  //         ],\n  //         \"thumbnail\": \"http://img.recipepuppy.com/646777.jpg\"\n  //     },\n  //     {\n  //         \"title\": \"Barbecued Grilled Portobello Sandwich\",\n  //         \"href\": \"http://www.kraftfoods.com/kf/recipes/barbecued-grilled-portobello-sandwich-53215.aspx?cm_re=1-_-1-_-RecipeAlsoEnjoy\",\n  //         \"ingredients\": [\n  //             \"mushrooms\",\n  //             \"barbecue sauce\",\n  //             \"sandwich rolls\",\n  //             \"lettuce\",\n  //             \"tomato\"\n  //         ],\n  //         \"thumbnail\": \"http://img.recipepuppy.com/675080.jpg\"\n  //     },\n  //   ];\n  //   viewAllRecipeService.getRecipes().subscribe((res) => {\n  //     expect(res).toEqual(recipes);\n  //   });\n  //   const req = httpMock.expectOne({\n  //     method: 'GET',\n  //     url: `${url}/recipes`});\n  //   req.flush(recipes);\n  // });\n\n  it(`should issue a request`, // 1. declare as async test since the HttpClient works with Observables\n  async( // 2. inject HttpClient and HttpTestingController into the test\n  inject([HttpClient, HttpTestingController], (http, backend) => {\n    // 3. send a simple request\n    http.get('/info/INFO').subscribe(); // 4. HttpTestingController supersedes `MockBackend` from the \"old\" Http package\n    // here two, it's significantly less boilerplate code needed to verify an expected request\n\n    backend.expectOne({\n      url: '/info/INFO',\n      method: 'GET'\n    });\n  })));\n});","map":{"version":3,"sources":["/Users/karthik/My-Work/cgi-assignment/src/app/recipe/services/view-all-recipe.service.spec.ts"],"names":["HttpClient","async","inject","TestBed","HttpClientTestingModule","HttpTestingController","ViewAllRecipeService","describe","viewAllRecipeService","httpClient","url","httpMock","beforeEach","configureTestingModule","imports","providers","it","expect","toBeTruthy","http","backend","get","subscribe","expectOne","method"],"mappings":"AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,uBAAvC;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,8BAA/D;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACnC,MAAIC,oBAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,GAAG,GAAG,uBAAV;AACA,MAAIC,QAAJ;AACAC,EAAAA,UAAU,CAAC,MAAM;AACbT,IAAAA,OAAO,CAACU,sBAAR,CAA+B;AAC3BC,MAAAA,OAAO,EAAE,CAACV,uBAAD,CADkB;AAE3BW,MAAAA,SAAS,EAAE,CAACT,oBAAD;AAFgB,KAA/B;AAIAE,IAAAA,oBAAoB,GAAGL,OAAO,CAACD,MAAR,CAAeI,oBAAf,CAAvB;AACAK,IAAAA,QAAQ,GAAGR,OAAO,CAACD,MAAR,CAAeG,qBAAf,CAAX;AACH,GAPS,CAAV;AAQAW,EAAAA,EAAE,CAAC,mBAAD,EAAsB,MAAM;AAC1BC,IAAAA,MAAM,CAACT,oBAAD,CAAN,CAA6BU,UAA7B;AACH,GAFC,CAAF,CAbmC,CAgBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,EAAAA,EAAE,CAAE,wBAAF,EACF;AACAf,EAAAA,KAAK,EACL;AACAC,EAAAA,MAAM,CAAC,CAACF,UAAD,EAAaK,qBAAb,CAAD,EAAsC,CAACc,IAAD,EAAOC,OAAP,KAAmB;AAC3D;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAS,YAAT,EAAuBC,SAAvB,GAF2D,CAG3D;AACA;;AACAF,IAAAA,OAAO,CAACG,SAAR,CAAkB;AACdb,MAAAA,GAAG,EAAE,YADS;AAEdc,MAAAA,MAAM,EAAE;AAFM,KAAlB;AAIH,GATK,CAFD,CAFH,CAAF;AAcH,CAjEO,CAAR","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { async, inject, TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\nimport { ViewAllRecipeService } from './view-all-recipe.service';\ndescribe('ViewAllRecipeService', () => {\n    let viewAllRecipeService;\n    let httpClient;\n    let url = 'http://localhost:8080';\n    let httpMock;\n    beforeEach(() => {\n        TestBed.configureTestingModule({\n            imports: [HttpClientTestingModule],\n            providers: [ViewAllRecipeService]\n        });\n        viewAllRecipeService = TestBed.inject(ViewAllRecipeService);\n        httpMock = TestBed.inject(HttpTestingController);\n    });\n    it('should be created', () => {\n        expect(viewAllRecipeService).toBeTruthy();\n    });\n    // it('should call getRecipes() and return an array of recipes', () => {\n    //   const recipes = [\n    //     {\n    //         \"title\": \"Barbecued Grilled Portobello Sandwich\",\n    //         \"href\": \"http://www.kraftfoods.com/kf/recipes/barbecued-grilled-portobello-sandwich-53215.aspx\",\n    //         \"ingredients\": [\n    //             \"mushrooms\",\n    //             \"barbecue sauce\",\n    //             \"sandwich rolls\",\n    //             \"lettuce\",\n    //             \"tomato\"\n    //         ],\n    //         \"thumbnail\": \"http://img.recipepuppy.com/646777.jpg\"\n    //     },\n    //     {\n    //         \"title\": \"Barbecued Grilled Portobello Sandwich\",\n    //         \"href\": \"http://www.kraftfoods.com/kf/recipes/barbecued-grilled-portobello-sandwich-53215.aspx?cm_re=1-_-1-_-RecipeAlsoEnjoy\",\n    //         \"ingredients\": [\n    //             \"mushrooms\",\n    //             \"barbecue sauce\",\n    //             \"sandwich rolls\",\n    //             \"lettuce\",\n    //             \"tomato\"\n    //         ],\n    //         \"thumbnail\": \"http://img.recipepuppy.com/675080.jpg\"\n    //     },\n    //   ];\n    //   viewAllRecipeService.getRecipes().subscribe((res) => {\n    //     expect(res).toEqual(recipes);\n    //   });\n    //   const req = httpMock.expectOne({\n    //     method: 'GET',\n    //     url: `${url}/recipes`});\n    //   req.flush(recipes);\n    // });\n    it(`should issue a request`, \n    // 1. declare as async test since the HttpClient works with Observables\n    async(\n    // 2. inject HttpClient and HttpTestingController into the test\n    inject([HttpClient, HttpTestingController], (http, backend) => {\n        // 3. send a simple request\n        http.get('/info/INFO').subscribe();\n        // 4. HttpTestingController supersedes `MockBackend` from the \"old\" Http package\n        // here two, it's significantly less boilerplate code needed to verify an expected request\n        backend.expectOne({\n            url: '/info/INFO',\n            method: 'GET'\n        });\n    })));\n});\n"]},"metadata":{},"sourceType":"module"}